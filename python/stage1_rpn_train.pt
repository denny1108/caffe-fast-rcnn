name: "VGG_ILSVRC_16_layers_bayesian_fusion"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data1'
  top: 'data2'
  top: 'im_info'
  top: 'gt_boxes'
  python_param {
    module: 'roi_data_layer.layer2in'
    layer: 'RoIDataLayer'
    param_str: "'num_classes': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data1"
  top: "conv1_1"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "conv4_3"
  top: "conv5_1"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "conv1_1_p"
  type: "Convolution"
  bottom: "data2"
  top: "conv1_1_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1_p"
  type: "ReLU"
  bottom: "conv1_1_p"
  top: "conv1_1_p"
}
layer {
  name: "conv1_2_p"
  type: "Convolution"
  bottom: "conv1_1_p"
  top: "conv1_2_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2_p"
  type: "ReLU"
  bottom: "conv1_2_p"
  top: "conv1_2_p"
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_2_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_1_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1_p"
  type: "ReLU"
  bottom: "conv2_1_p"
  top: "conv2_1_p"
}
layer {
  name: "conv2_2_p"
  type: "Convolution"
  bottom: "conv2_1_p"
  top: "conv2_2_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2_p"
  type: "ReLU"
  bottom: "conv2_2_p"
  top: "conv2_2_p"
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1_p"
  type: "Convolution"
  bottom: "pool2_p"
  top: "conv3_1_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1_p"
  type: "ReLU"
  bottom: "conv3_1_p"
  top: "conv3_1_p"
}
layer {
  name: "conv3_2_p"
  type: "Convolution"
  bottom: "conv3_1_p"
  top: "conv3_2_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2_p"
  type: "ReLU"
  bottom: "conv3_2_p"
  top: "conv3_2_p"
}
layer {
  name: "conv3_3_p"
  type: "Convolution"
  bottom: "conv3_2_p"
  top: "conv3_3_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3_p"
  type: "ReLU"
  bottom: "conv3_3_p"
  top: "conv3_3_p"
}
layer {
  name: "pool3_p"
  type: "Pooling"
  bottom: "conv3_3_p"
  top: "pool3_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1_p"
  type: "Convolution"
  bottom: "pool3_p"
  top: "conv4_1_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1_p"
  type: "ReLU"
  bottom: "conv4_1_p"
  top: "conv4_1_p"
}
layer {
  name: "conv4_2_p"
  type: "Convolution"
  bottom: "conv4_1_p"
  top: "conv4_2_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2_p"
  type: "ReLU"
  bottom: "conv4_2_p"
  top: "conv4_2_p"
}
layer {
  name: "conv4_3_p"
  type: "Convolution"
  bottom: "conv4_2_p"
  top: "conv4_3_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3_p"
  type: "ReLU"
  bottom: "conv4_3_p"
  top: "conv4_3_p"
}
layer {
  name: "conv5_1_p"
  type: "Convolution"
  bottom: "conv4_3_p"
  top: "conv5_1_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1_p"
  type: "ReLU"
  bottom: "conv5_1_p"
  top: "conv5_1_p"
}
layer {
  name: "conv5_2_p"
  type: "Convolution"
  bottom: "conv5_1_p"
  top: "conv5_2_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2_p"
  type: "ReLU"
  bottom: "conv5_2_p"
  top: "conv5_2_p"
}
layer {
  name: "conv5_3_p"
  type: "Convolution"
  bottom: "conv5_2_p"
  top: "conv5_3_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3_p"
  type: "ReLU"
  bottom: "conv5_3_p"
  top: "conv5_3_p"
}
#======== RPN ==========
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param { lr_mult: 0.0 }
  param { lr_mult: 0.0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 0.0 }
  param { lr_mult: 0.0 }
  convolution_param {
    num_output: 12   # 2(bg/fg) * 6(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 0.0 }
  param { lr_mult: 0.0 }
  convolution_param {
    num_output: 24   # 4 * 6(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

layer {
  name: 'rpn-data'
  type: 'Python'
  bottom: 'rpn_cls_score'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data1'
  top: 'rpn_labels'
  top: 'rpn_bbox_targets'
  top: 'rpn_bbox_inside_weights'
  top: 'rpn_bbox_outside_weights'
  python_param {
    module: 'rpn.anchor_target_layer'
    layer: 'AnchorTargetLayer'
    param_str: "'feat_stride': 8"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  propagate_down: 1
  propagate_down: 0
  top: "rpn_cls_loss"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: 'rpn_bbox_inside_weights'
  bottom: 'rpn_bbox_outside_weights'
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param { sigma: 3.0 }
}

#======== RPN pair==========
layer {
  name: "rpn_conv/3x3_p"
  type: "Convolution"
  bottom: "conv5_3_p"
  top: "rpn/output_p"
  param { lr_mult: 0.0 }
  param { lr_mult: 0.0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3_p"
  type: "ReLU"
  bottom: "rpn/output_p"
  top: "rpn/output_p"
}
layer {
  name: "rpn_cls_score_p"
  type: "Convolution"
  bottom: "rpn/output_p"
  top: "rpn_cls_score_p"
  param { lr_mult: 0.0 }
  param { lr_mult: 0.0 }
  convolution_param {
    num_output: 12   # 2(bg/fg) * 6(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_bbox_pred_p"
  type: "Convolution"
  bottom: "rpn/output_p"
  top: "rpn_bbox_pred_p"
  param { lr_mult: 0.0 }
  param { lr_mult: 0.0 }
  convolution_param {
    num_output: 24   # 4 * 6(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score_p"
   top: "rpn_cls_score_reshape_p"
   name: "rpn_cls_score_reshape_p"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

layer {
  name: 'rpn-data_p'
  type: 'Python'
  bottom: 'rpn_cls_score_p'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data2'
  top: 'rpn_labels_p'
  top: 'rpn_bbox_targets_p'
  top: 'rpn_bbox_inside_weights_p'
  top: 'rpn_bbox_outside_weights_p'
  python_param {
    module: 'rpn.anchor_target_layer'
    layer: 'AnchorTargetLayer'
    param_str: "'feat_stride': 8"
  }
}
layer {
  name: "rpn_loss_cls_p"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape_p"
  bottom: "rpn_labels_p"
  propagate_down: 1
  propagate_down: 0
  top: "rpn_cls_loss_p"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox_p"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred_p"
  bottom: "rpn_bbox_targets_p"
  bottom: 'rpn_bbox_inside_weights_p'
  bottom: 'rpn_bbox_outside_weights_p'
  top: "rpn_loss_bbox_p"
  loss_weight: 1
  smooth_l1_loss_param { sigma: 3.0 }
}

#==========================================================
#========= RCNN ============
# Dummy layers so that initial parameters are saved into the output net
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    shape { dim: 1 dim: 25088 }
    data_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "dummy_roi_pool_conv5_p"
  type: "DummyData"
  top: "dummy_roi_pool_conv5_p"
  dummy_data_param {
    shape { dim: 1 dim: 25088 }
    data_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc6_p"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5_p"
  top: "fc6_p"
  param { lr_mult: 0 decay_mult: 0}
  param { lr_mult: 0 decay_mult: 0}
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6_p"
  type: "ReLU"
  bottom: "fc6_p"
  top: "fc6_p"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "fc7_p"
  type: "InnerProduct"
  bottom: "fc6_p"
  top: "fc7_p"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7_p"
  type: "ReLU"
  bottom: "fc7_p"
  top: "fc7_p"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 2
  }
}
layer {
  name: "cls_score_p"
  type: "InnerProduct"
  bottom: "fc7_p"
  top: "cls_score_p"
  inner_product_param {
    num_output: 2
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 8
  }
}
layer {
  name: "bbox_pred_p"
  type: "InnerProduct"
  bottom: "fc7_p"
  top: "bbox_pred_p"
  inner_product_param {
    num_output: 8
  }
}
layer {
  name: "silence_cls_score"
  type: "Silence"
  bottom: "cls_score"
}
layer {
  name: "silence_cls_score_p"
  type: "Silence"
  bottom: "cls_score_p"
}
layer {
  name: "silence_bbox_pred"
  type: "Silence"
  bottom: "bbox_pred"
}
layer {
  name: "silence_bbox_pred_p"
  type: "Silence"
  bottom: "bbox_pred_p"
}

#====== Fusion =========
layer {
  name: "conv4_3_concat"
  type: "Concat"
  bottom: "conv4_3"
  bottom: "conv4_3_p"
  top: "conv4_3_concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv4_3_redim_sel"
  type: "Convolution"
  bottom: "conv4_3_concat"
  top: "conv4_3_redim_sel"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }  
}
layer {
  name: "relu4_3_redim_sel"
  type: "ReLU"
  bottom: "conv4_3_redim_sel"
  top: "conv4_3_redim_sel"
}
layer {
  name: "conv5_1_sel"
  type: "Convolution"
  bottom: "conv4_3_redim_sel"
  top: "conv5_1_sel"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_1_sel"
  type: "ReLU"
  bottom: "conv5_1_sel"
  top: "conv5_1_sel"
}
layer {
  name: "conv5_2_sel"
  type: "Convolution"
  bottom: "conv5_1_sel"
  top: "conv5_2_sel"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_2_sel"
  type: "ReLU"
  bottom: "conv5_2_sel"
  top: "conv5_2_sel"
}
layer {
  name: "conv5_3_sel"
  type: "Convolution"
  bottom: "conv5_2_sel"
  top: "conv5_3_sel"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_3_sel"
  type: "ReLU"
  bottom: "conv5_3_sel"
  top: "conv5_3_sel"
}
layer {
  name: "silence_conv5_3_sel"
  type: "Silence"
  bottom: "conv5_3_sel"
}
layer {
  name: "dummy_roi_pool_conv5_sel"
  type: "DummyData"
  top: "dummy_roi_pool_conv5_sel"
  dummy_data_param {
    shape { dim: 1 dim: 25088 }
    data_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "fc6_sel"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5_sel"
  top: "fc6_sel"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu6_sel"
  type: "ReLU"
  bottom: "fc6_sel"
  top: "fc6_sel"
}
layer {
  name: "fc7_sel"
  type: "InnerProduct"
  bottom: "fc6_sel"
  top: "fc7_sel"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu7_sel"
  type: "ReLU"
  bottom: "fc7_sel"
  top: "fc7_sel"
}
layer {
  name: "silence_fc7_sel"
  type: "Silence"
  bottom: "fc7_sel"
}
